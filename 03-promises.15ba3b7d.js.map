{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SACZD,SAASC,cAAc,gBAC7BD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBAuB7C,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MA9BPL,EAAOa,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAWF,EAAMG,cAAcD,SACrC,IAAIE,EAAQC,OAAOH,EAASI,KAAKC,OAC7BD,EAAOD,OAAOH,EAASX,MAAMgB,OAC7BC,EAASH,OAAOH,EAASM,OAAOD,OAEpC,IAAK,IAAIE,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDpB,EAAcoB,EAAUL,GACrBM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,QAAQC,IAAI,uBAAqBtB,QAAiBC,UAEnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBoB,QAAQC,IAAI,sBAAoBtB,QAAeC,UAEnDa,GAASE","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst firstDelayInputEl = document.querySelector('input[delay]');\nconst stepInputEl = document.querySelector('input[step]');\nconst amountInputEl = document.querySelector('input[amount]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const elements = event.currentTarget.elements;\n  let delay = Number(elements.step.value);\n  let step = Number(elements.delay.value);\n  let amount = Number(elements.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","elements","currentTarget","delay1","Number","step","value","amount","position1","then","console","log","catch"],"version":3,"file":"03-promises.15ba3b7d.js.map"}